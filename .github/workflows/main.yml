name: Run all SQL files on Snowflake

on:
  push:
    branches:
      - 'main'  # Runs on push to any branch

env:
  SF_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  SF_USER: ${{ secrets.SNOWFLAKE_USER }}
  SF_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SF_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
  SF_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
  SF_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
  SF_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}

jobs:
  run-sql:
    runs-on: ubuntu-latest
    environment: dev_env

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Snowflake connector
        run: pip install snowflake-connector-python

      - name: Create SQL runner script
        run: |
          cat <<EOF > run_sql.py
          import sys
          import snowflake.connector
          import os
          import glob
          
          # Get all .sql files recursively
          sql_files = sorted(glob.glob("**/*.sql", recursive=True))
          
          if not sql_files:
              print("No SQL files found in the repo.")
              sys.exit(0)
          
          conn = snowflake.connector.connect(
              account=os.getenv("SF_ACCOUNT"),
              user=os.getenv("SF_USER"),
              password=os.getenv("SF_PASSWORD"),
              warehouse=os.getenv("SF_WAREHOUSE"),
              database=os.getenv("SF_DATABASE"),
              schema=os.getenv("SF_SCHEMA"),
              role=os.getenv("SF_ROLE"),
              autocommit=True
          )
          
          cur = conn.cursor()
          
          for file in sql_files:
              print(f"Running SQL from: {file}")
              with open(file, "r") as f:
                  sql = f.read()
              print(f"\\n--- SQL Content ---\\n{sql}\\n-------------------")
              try:
                  cur.execute(sql)
                  print(f"✅ Executed {file} successfully.\\n")
              except Exception as e:
                  print(f"❌ Error executing {file}: {e}")
                  cur.close()
                  conn.close()
                  sys.exit(1)
          
          cur.close()
          conn.close()
          EOF

