name: Run Changed SQL Files on Snowflake (Inline)

on:
  push:
    branches:
      - 'main'

env:
  SF_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
  SF_USER: ${{ secrets.SNOWFLAKE_USER }}
  SF_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
  SF_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
  SF_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
  SF_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
  SF_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}

jobs:
  run-sql:
    runs-on: ubuntu-latest
    environment: dev_env

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Snowflake Connector
        run: pip install snowflake-connector-python

      - name: Run changed SQL files inline
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '\.sql$' || true)


          echo "SQL files to execute: $CHANGED_FILES"

          for file in $CHANGED_FILES; do
            echo "Executing: $file"
            python3 - <<EOF
            import os
            import snowflake.connector
            
            file_path = "${file}"
            print(f"Running SQL file: {file_path}")
            
            if not os.path.exists(file_path):
                print(f"File not found: {file_path}")
                exit(1)
            
            with open(file_path, 'r') as f:
                sql = f.read()
            
            print(f"\n--- SQL Content ---\n{sql}\n-------------------")
            
            conn = snowflake.connector.connect(
                account=os.environ['SF_ACCOUNT'],
                user=os.environ['SF_USER'],
                password=os.environ['SF_PASSWORD'],
                warehouse=os.environ['SF_WAREHOUSE'],
                database=os.environ['SF_DATABASE'],
                schema=os.environ['SF_SCHEMA'],
                role=os.environ['SF_ROLE'],
                autocommit=True
            )
            
            cur = conn.cursor()
            try:
                cur.execute(sql)
                print(f"✅ Executed {file_path} successfully.")
            except Exception as e:
                print(f"❌ Error executing {file_path}: {e}")
                exit(1)
            finally:
                cur.close()
                conn.close()
            EOF
          done
